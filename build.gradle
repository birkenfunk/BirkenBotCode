plugins {
    id 'org.springframework.boot' version '2.5.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
    id 'java'
}

group 'de.Birkenfunk'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "birkenfunk_BirkenBotCode"
        property "sonar.organization", "birkenfunk"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.5.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.5'
    runtimeOnly 'mysql:mysql-connector-java:8.0.25'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'

    implementation 'net.dv8tion:JDA:4.3.0_298'

    implementation 'org.modelmapper:modelmapper:2.4.4'

    implementation 'com.sedmelluq:lavaplayer:1.3.77'

    implementation 'org.apache.opennlp:opennlp-tools:1.9.3'
    implementation 'one.util:streamex:0.7.3'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}



jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

